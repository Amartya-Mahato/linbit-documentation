FO_STYLESHEET ?= stylesheets/fo.xsl

%.fo: stylesheets/fo-titlepage.xsl
	@if [ -e $*.xml ]; then \
		xsltproc -o $@ \
		--stringparam paper.type A4 \
		--stringparam title.font.family serif \
		--stringparam insert.link.page.number yes \
		--stringparam insert.xref.page.number yes \
		--stringparam graphic.default.extension svg \
		--param section.autolabel 1 \
		--param section.autolabel.max.depth 2 \
		--param section.label.includes.component.label 1 \
		--stringparam generate.toc "book toc,title"\
		--param use.extensions 1 \
		--param fop1.extensions 1 \
		--param admon.graphics 1 \
		--stringparam admon.graphics.path images/ \
		--stringparam admon.graphics.extension .svg \
		--xinclude \
		$(FO_STYLESHEET) $*.xml; \
	else \
		xsltproc -o $@ \
		--stringparam paper.type A4 \
		--stringparam title.font.family serif \
		--stringparam insert.link.page.number yes \
		--stringparam insert.xref.page.number yes \
		--stringparam graphic.default.extension svg \
		--param section.autolabel 1 \
		--param section.autolabel.max.depth 2 \
		--param section.label.includes.component.label 1 \
		--stringparam generate.toc "book toc,title"\
		--param use.extensions 1 \
		--param fop1.extensions 1 \
		--param admon.graphics 1 \
		--stringparam admon.graphics.path images/ \
		--stringparam admon.graphics.extension .svg \
		--stringparam rootid $* \
		--xinclude \
		$(FO_STYLESHEET) howto-collection.xml; \
	fi

%.pdf: %.fo
	fop $< -pdf $@

%.ps: %.fo
	fop $< -ps $@

clean-fo:
	rm -f $(XML_FILES:.xml=.fo) 

clean-ps:
	rm -f $(XML_FILES:.xml=.ps)

clean-pdf:
	rm -f $(XML_FILES:.xml=.pdf)

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-03-04 15:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#, no-wrap
msgid "LINSTOR Volumes in Kubernetes"
msgstr "Kubernetes で LINSTOR ボリューム"

#. type: Plain text
msgid ""
"indexterm:[Kubernetes]This chapter describes LINSTOR volumes in Kubernetes "
"as managed by the https://github.com/LINBIT/linstor-csi[LINSTOR CSI plugin]"
msgstr ""
"indexterm:[Kubernetes] この章では https://github.com/LINBIT/linstor-"
"csi[LINSTOR CSI plugin] で管理されるKubernetesのLINSTORボリュームについて説明"
"します。"

#. type: Title ===
#, no-wrap
msgid "Kubernetes Overview"
msgstr "Kubernetesの概要"

#. type: Plain text
msgid ""
"_Kubernetes_ is a container orchestrator (CO) made by Google. Kubernetes "
"defines the behavior of containers and related services via declarative "
"specifications. In this guide, we'll focus on on using `kubectl` to "
"manipulate `.yaml` files that define the specifications of Kubernetes "
"objects."
msgstr ""
"KubernetesはGoogleによって作成されたコンテナのオーケストレータです。"
"Kubernetesは宣言された仕様に基づいてコンテナと関連サービスの動作を定義しま"
"す。このガイドでは、Kubernetesオブジェクトの仕様を定義する `.yaml` ファイルを"
"操作するために `kubectl` を使うことに焦点を当てます。"

#. type: Title ===
#, no-wrap
msgid "LINSTOR CSI Plugin Deployment"
msgstr "LINSTOR CSIプラグインの配備"

#. type: Plain text
msgid ""
"Instructions for deploying the CSI plugin can be found on the https://github."
"com/LINBIT/linstor-csi[project's github]. This will result in a linstor-csi-"
"controller _StatefulSet_ and a linstor-csi-node _DaemonSet_ running in the "
"kube-system namespace."
msgstr ""
"CSIプラグインを配備するための手順は https://github.com/LINBIT/linstor-"
"csi[project's github] にあります。これにより linstor-csi-controller "
"_StatefulSet_ と linstor-csi-node _DaemonSet_ が kube-system 名前空間で動作し"
"ます。"

#. type: delimited block -
#, no-wrap
msgid ""
"NAME                       READY   STATUS    RESTARTS   AGE     IP              NODE\n"
"linstor-csi-controller-0   4/4     Running   0          3h10m   191.168.1.200   kubelet-a\n"
"linstor-csi-node-4fcnn     2/2     Running   0          3h10m   192.168.1.202   kubelet-c\n"
"linstor-csi-node-f2dr7     2/2     Running   0          3h10m   192.168.1.203   kubelet-d\n"
"linstor-csi-node-j66bc     2/2     Running   0          3h10m   192.168.1.201   kubelet-b\n"
"linstor-csi-node-qb7fw     2/2     Running   0          3h10m   192.168.1.200   kubelet-a\n"
"linstor-csi-node-zr75z     2/2     Running   0          3h10m   192.168.1.204   kubelet-e\n"
msgstr ""
"NAME                       READY   STATUS    RESTARTS   AGE     IP              NODE\n"
"linstor-csi-controller-0   4/4     Running   0          3h10m   191.168.1.200   kubelet-a\n"
"linstor-csi-node-4fcnn     2/2     Running   0          3h10m   192.168.1.202   kubelet-c\n"
"linstor-csi-node-f2dr7     2/2     Running   0          3h10m   192.168.1.203   kubelet-d\n"
"linstor-csi-node-j66bc     2/2     Running   0          3h10m   192.168.1.201   kubelet-b\n"
"linstor-csi-node-qb7fw     2/2     Running   0          3h10m   192.168.1.200   kubelet-a\n"
"linstor-csi-node-zr75z     2/2     Running   0          3h10m   192.168.1.204   kubelet-e\n"

#. type: Title ===
#, no-wrap
msgid "Basic Configuration and Deployment"
msgstr "基本的な構成と配備"

#. type: Plain text
msgid ""
"Once all linstor-csi __Pod__s are up and running, we can provision volumes "
"using the usual Kubernetes workflows."
msgstr ""
"すべての linstor-csi __Pod__ が稼働したら、通常のKubernetesワークフローを使用"
"してボリュームをプロビジョニングできます。"

#. type: Plain text
msgid ""
"Configuring the behavior and properties of LINSTOR volumes deployed via "
"Kubernetes is accomplished via the use of __StorageClass__es. Here below is "
"the simplest practical _StorageClass_ that can be used to deploy volumes:"
msgstr ""
"Kubernetesを介して配備されるLINSTORボリュームの動作とプロパティの設定は、"
"__StorageClass__ を使用して行います。以下はボリュームを配備する最も簡単な "
"_StorageClass_ の例です。"

#. type: Block title
#, no-wrap
msgid "linstor-basic-sc.yaml"
msgstr "linstor-basic-sc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1beta1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # io.drbd.linstor-csi is the name that the LINSTOR CSI plugin uses to identify itself\n"
"provisioner: io.drbd.linstor-csi\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plugin's deployment\n"
"  storagePool: \"drbdpool\"\n"
msgstr ""
"apiVersion: storage.k8s.io/v1beta1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # io.drbd.linstor-csi is the name that the LINSTOR CSI plugin uses to identify itself\n"
"provisioner: io.drbd.linstor-csi\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plugin's deployment\n"
"  storagePool: \"drbdpool\"\n"

#. type: Plain text
msgid "We can create the _StorageClass_ with the following command:"
msgstr "次のコマンドで _StorageClass_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f linstor-basic-sc.yaml\n"
msgstr "kubectl create -f linstor-basic-sc.yaml\n"

#. type: Plain text
msgid ""
"Now that our _StorageClass_ is created, we can now create a "
"_PersistentVolumeClaim_ which can be used to provision volumes known both to "
"Kubernetes and LINSTOR:"
msgstr ""
"_StorageClass_ が作成されたので、KubernetesとLINSTOR の両方に認識されるボ"
"リュームをプロビジョニングするために使用できる _PersistentVolumeClaim_ を作成"
"できます。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pvc.yaml"
msgstr "my-first-linstor-volume-pvc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"  annotations:\n"
"    # This line matches the PersistentVolumeClaim with our StorageClass\n"
"    # and therefore our provisioner.\n"
"    volume.beta.kubernetes.io/storage-class: linstor-basic-storage-class\n"
"spec:\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"
msgstr ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"  annotations:\n"
"    # This line matches the PersistentVolumeClaim with our StorageClass\n"
"    # and therefore our provisioner.\n"
"    volume.beta.kubernetes.io/storage-class: linstor-basic-storage-class\n"
"spec:\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"

#. type: Plain text
msgid "We can create the _PersistentVolumeClaim_ with the following command:"
msgstr "次のコマンドで _PersistentVolumeClaim_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pvc.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pvc.yaml\n"

#. type: Plain text
msgid ""
"This will create a _PersistentVolumeClaim_ known to Kubernetes, which will "
"have a _PersistentVolume_ bound to it, additionally LINSTOR will now create "
"this volume according to the configuration defined in the `linstor-basic-"
"storage-class` _StorageClass_. The LINSTOR volume's name will be a UUID "
"prefixed with `csi-` This volume can be observed with the usual `linstor "
"resource list`. Once that volume is created, we can attach it to a pod. The "
"following _Pod_ spec will spawn a Fedora container with our volume attached "
"that busy waits so it is not unscheduled before we can interact with it:"
msgstr ""
"これはKubernetesに知られている _PersistentVolumeClaim_ を作成し、それに "
"_PersistentVolume_ がバインドされます。さらにLINSTORは `linstor-basic-"
"storage-class` _StorageClass_ で定義された設定に従ってこのボリュームを作成し"
"ます。 LINSTORボリュームの名前は `csi-` という接頭辞が付いたUUIDになります。"
"このボリュームは通常の `linstor resource list` で見ることができます。一度ボ"
"リュームが作成されたら、それを pod にアタッチすることができます。以下の pod "
"仕様はFedoraコンテナを作成し、ビジーウェイトするので、アンスケジュールされま"
"せん。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pod.yaml"
msgstr "my-first-linstor-volume-pod.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"
msgstr ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"

#. type: Plain text
msgid "We can create the _Pod_ with the following command:"
msgstr "次のコマンドで _Pod_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pod.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pod.yaml\n"

#. type: Plain text
msgid ""
"Running `kubectl describe pod fedora` can be used to confirm that _Pod_ "
"scheduling and volume attachment succeeded."
msgstr ""
"`kubectl describe pod fedora` を実行することで _Pod_ がスケジュールされ、ボ"
"リュームが正しく割り当てられたのを確認できます。"

#. type: Plain text
msgid ""
"To remove a volume, please ensure that no pod is using it and then delete "
"the _PersistentVolumeClaim_ via `kubectl`. For example, to remove the volume "
"that we just made, run the following two commands, noting that the _Pod_ "
"must be unscheduled before the _PersistentVolumeClaim_ will be removed:"
msgstr ""
"ボリュームを削除するにはpodがもう使われていないことを確認してから、`kubectl` "
"を使ってPersistentVolumeClaimを削除します。例えば、先ほど作成したボリュームを"
"削除するには、以下のコマンドを実行します。ボリュームが削除される前にpodのスケ"
"ジュールを解除する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pod fedora # unschedule the pod.\n"
msgstr "kubectl delete pod fedora # podをアンスケジュール。\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl get pod -w # wait for pod to be unscheduled\n"
msgstr "kubectl get pod -w # podがアンスケジュールされるまで待つ\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pvc my-first-linstor-volume # remove the PersistentVolumeClaim, the PersistentVolume, and the LINSTOR Volume.\n"
msgstr "kubectl delete pvc my-first-linstor-volume # PersistentVolumeClaim、PersistentVolume、Linstorボリュームを削除する。\n"

#. type: Title ===
#, no-wrap
msgid "Volume Accessibility"
msgstr "ボリュームアクセシビリティ"

#.  This only covers DRBD volumes, section might change if linked docs are updated.
#. type: Plain text
msgid ""
"LINSTOR volumes are typically accessible both locally and <<s-drbd_clients,"
"over the network>>."
msgstr ""
"LINSTORボリュームは通常、ローカルか <<s-drbd_clients,クライアント>> としてア"
"クセスされます。"

#. type: Plain text
msgid ""
"By default, the CSI plugin will attach volumes directly if the _Pod_ happens "
"to be scheduled on a _kubelet_ where its underlying storage is present. "
"However, _Pod_ scheduling does not currently take volume locality into "
"account. The <<s-kubernetes-replicasonsame,replicasOnSame>> parameter can be "
"used to restrict where the underlying storage may be provisioned, if locally "
"attached volumes are desired."
msgstr ""
"_Pod_ がその基礎となるストレージが存在する _kubelet_ にスケジュールされている"
"場合、デフォルトでCSIプラグインはボリュームを直接接続します。しかしPod スケ"
"ジューリングは現在ボリュームがローカルかどうか考慮に入れていません。 <<s-"
"kubernetes-replicasonsame,replicasOnSame>> パラメータで、ローカルに接続された"
"ボリュームが必要な場合、ストレージをプロビジョニングできる場所を制限できま"
"す。"

#. type: Title ===
#, no-wrap
msgid "Advanced Configuration"
msgstr "高度な設定"

#. type: Plain text
msgid ""
"In general, all configuration for LINSTOR volumes in Kubernetes should be "
"done via the _StorageClass_ parameters, as seen with the _storagePool_ in "
"the basic example above. We'll give all the available options an in-depth "
"treatment here."
msgstr ""
"KubernetesのLinstorボリュームのすべての構成は、上で使用したサンプルのように"
"_StorageClass_ のパラメータ経由で設定されます。以下に利用可能なオプションの詳"
"細を示します。"

#. type: Title ====
#, no-wrap
msgid "nodeList"
msgstr "nodeList"

#. type: Plain text
msgid ""
"`nodeList` is a list of nodes for volumes to be assigned to. This will "
"assign the volume to each node and it will be replicated among all of them. "
"This can also be used to select a single node by hostname, but it's more "
"flexible to use <<s-kubernetes-replicasonsame,replicasOnSame>> to select a "
"single node."
msgstr ""
"`nodeList` ボリュームが割り当てられるノードのリストです。ボリュームがそれぞれ"
"のノードに割り当てられそれらの間で複製が行われます。これはホスト名で１つの"
"ノードを指定できますが、 これには <<s-kubernetes-replicasonsame,"
"replicasOnSame>> を使うほうが柔軟性があります。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-autoplace,"
"autoPlace>>."
msgstr ""
"このオプションを使用する場合は <<s-kubernetes-autoplace,autoPlace>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"This option determines on which LINSTOR nodes the underlying storage for "
"volumes will be provisioned and is orthogonal from which _kubelets_ these "
"volumes will be accessible."
msgstr ""
"このオプションは、ボリュームのストレージをどのLINSTORノード上でプロビジョニン"
"グするかを決定し、 _kubelets_ からこれらのボリュームにアクセスできるようにし"
"ます。"

#. type: Plain text
msgid "Example: `nodeList: \"node-a node-b node-c\"`"
msgstr "例: `nodeList: \"node-a node-b node-c\"`"

#. type: Plain text
msgid "Example: `nodeList: \"node-a\"`"
msgstr "例: `nodeList: \"node-a\"`"

#. type: Title ====
#, no-wrap
msgid "autoPlace"
msgstr "autoPlace"

#. type: Plain text
msgid ""
"`autoPlace` is an integer that determines the amount of replicas a volume of "
"this _StorageClass_ will have.  For instance, `autoPlace: 3` will produce "
"volumes with three-way replication. If neither `autoPlace` nor `nodeList` "
"are set, volumes will be <<s-autoplace-linstor,automatically placed>> on one "
"node."
msgstr ""
"`autoPlace` この _StorageClass_ が持つボリュームの複製数を指定します。例え"
"ば、 `autoPlace: 3` は３つの複製をもつボリュームを生成します。 `autoPlace` ま"
"たは `nodeList` が指定されていない場合は、１つのノード上にボリュームが生成さ"
"れます。<<s-autoplace-linstor,自動配備>> を参照ください。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-nodelist,nodeList>>."
msgstr ""
"このオプションを使用する場合は、 <<s-kubernetes-nodelist,nodeList>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"This option (and all options which affect autoplacement behavior) modifies "
"the number of LINSTOR nodes on which the underlying storage for volumes will "
"be provisioned and is orthogonal to which _kubelets_ those volumes will be "
"accessible from."
msgstr ""
"このオプション（および自動配置の動作に影響を与えるすべてのオプション）は、ボ"
"リューム用のストレージがプロビジョニングされるLINSTORノードの数を変更し、 "
"_kubelets_ からこれらのボリュームにアクセスできるようにします。"

#. type: Plain text
msgid "Example: `autoPlace: 2`"
msgstr "例: `autoPlace: 2`"

#. type: Plain text
msgid "Default: `autoPlace: 1`"
msgstr "例: `autoPlace: 1`"

#. type: Title ====
#, no-wrap
msgid "replicasOnSame"
msgstr "replicasOnSame"

#.  These should link to the linstor documentation about node properties, but those
#.  do not exist at the time of this commit.
#. type: Plain text
msgid ""
"`replicasOnSame` is a list of key=value pairs used as required autoplacement "
"selection labels when <<s-kubernetes-autoplace,autoplace>> is used to "
"determine where to provision storage. These labels correspond to LINSTOR "
"node aux props. Please note both the key and value names are user-defined "
"and arbitrary. Let's explore this behavior with examples assuming a LINSTOR "
"cluster such that `node-a` is configured with the following aux props "
"`zone=z1` and `role=backups`, while `node-b` is configured with only "
"`zone=z1`."
msgstr ""
"`replicasOnSame` は、 <<s-kubernetes-autoplace,autoplace>> がストレージをプロ"
"ビジョニングする場所を決定するために使用されるときは必須の自動配置選択ラベル"
"で、 key = value のペアのリストです。これらのラベルは、LINSTORノードの aux "
"prop に対応しています。キーと値の名前はどちらもユーザー定義で任意です。"
"LINSTORクラスタ `node-a` が aux props `zone=z1` と role=backups`, `node-b` "
"が zone=z1` のみを持つと仮定します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then all volumes created from "
"that _StorageClass_ will be provisioned on `node-a`, since that is the only "
"node with all of the correct key=value pairs in the LINSTOR cluster. This is "
"the most flexible way to select a single node for provisioning."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、この _StorageClass_ から生成されるすべてのボ"
"リュームは `node-a` にプロビジョニングされます。これは LINSTOR クラスタ内です"
"べての key = value ペアを持つ唯一のノードだからです。これは、プロビジョニング"
"に１つのノードを選択する最も柔軟な方法です。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on either "
"`node-a` or `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` か `node-b` のどちらかにプロビジョニングさ"
"れます。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then provisioning will fail, as "
"there are not two or more nodes that have the appropriate aux props."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、適切な aux prop を持つノードが2つ以上ないためプ"
"ロビジョニングは失敗します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on both "
"`node-a` and `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` と `node-b` の両方にプロビジョニングされま"
"す。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid "Example: `replicasOnSame: \"zone=z1 role=backups\"`"
msgstr "例: `replicasOnSame: \"zone=z1 role=backups\"`"

#. type: Title ====
#, no-wrap
msgid "replicasOnDifferent"
msgstr "replicasOnDifferent"

#. type: Plain text
msgid ""
"`replicasOnDifferent` is a list of key=value pairs to avoid as autoplacement "
"selection. It is the inverse of <<s-kubernetes-replicasonsame,"
"replicasOnSame>>."
msgstr ""
"`replicasOnDifferent` 自動配置選択として避けるための key=value のペアのリスト"
"です。 <<s-kubernetes-replicasonsame,replicasOnSame>> の逆のものです。"

#. type: Plain text
msgid "Example: `replicasOnDifferent: \"no-csi-volumes=true\"`"
msgstr "例: `replicasOnDifferent: \"no-csi-volumes=true\"`"

#. type: Title ====
#, no-wrap
msgid "storagePool"
msgstr "storagePool"

#. type: Plain text
msgid ""
"`storagePool` is the name of the LINSTOR <<s-storage_pools,storage pool>> "
"that will be used to provide storage to the newly-created volumes."
msgstr ""
"`storagePool` は LINSTOR <<s-storage_pools,ストレージプール>> の名前で、新規"
"に作成されたボリュームにストレージを供給するときに使用されます。"

#. type: Plain text
msgid ""
"Only nodes configured with this same _storage pool_ with be considered for "
"<<s-kubernetes-autoplace,autoplacement>>. Likewise, for _StorageClasses_ "
"using <<s-kubernetes-nodelist,nodeList>> all nodes specified in that list "
"must have this _storage pool_ configured on them."
msgstr ""
"これと同じ _storage pool_ で構成されたノードのみが <<s-kubernetes-autoplace,"
"autoplacement>> に使用されます。同様に <<s-kubernetes-nodelist,nodeList>> を"
"使う _StorageClasses_ ではそのリストで指定されたすべてのノードが _storage "
"pool_ を構成している必要があります。"

#. type: Plain text
msgid "Example: `storagePool: my-storage-pool`"
msgstr "例: `storagePool: my-storage-pool`"

#. type: Title ====
#, no-wrap
msgid "disklessStoragePool"
msgstr "disklessStoragePool"

#.  This should link to the linstor section talking about diskless storage pools
#.  when that gets written.
#. type: Plain text
msgid ""
"`disklessStoragePool` is an optional parameter that only effects LINSTOR "
"volumes assigned disklessly to _kubelets_ i.e., as clients. If you have a "
"custom _diskless storage pool_ defined in LINSTOR, you'll specify that here."
msgstr ""
"`disklessStoragePool` はオプションでノードが _kubelets_ にディスクレス、すな"
"わちクライアントとして割り当てられるようにするときに使用します。LINSTOR でカ"
"スタムディスクレスストレージプールが定義されている場合は、ここで指定します。"

#. type: Plain text
msgid "Example: `disklessStoragePool: my-custom-diskless-pool`"
msgstr "例: `disklessStoragePool: my-custom-diskless-pool`"

#. type: Title ====
#, no-wrap
msgid "encryption"
msgstr "encryption"

#. type: Plain text
msgid ""
"`encryption` is an optional parameter that determines whether to encrypt "
"volumes. LINSTOR must be <<s-linstor-encrypted-Volumes,configured for "
"encryption>> for this to work properly."
msgstr ""
"`encryption` はオプションで、ボリュームを暗号化するかどうかを指定します。"
"LINSTOR はこれが正しく動作するように適切に設定されている必要があります。"

#. type: Plain text
msgid "Example: `encryption: \"true\"`"
msgstr "例: `encryption: \"true\"`"

#. type: Title ====
#, no-wrap
msgid "filesystem"
msgstr "filesystem"

#. type: Plain text
msgid ""
"`filesystem` is an option parameter to specify the filesystem for non raw "
"block volumes. Currently supported options are `xfs` and `ext4`."
msgstr ""
"`filesystem` は下位のブロックボリュームのファイルシステムを指定するためのオプ"
"ションパラメータです。現在サポートされているオプションは `xfs` と `ext4` で"
"す。"

#. type: Plain text
msgid "Example: `filesystem: \"xfs\"`"
msgstr "例: `filesystem: \"xfs\"`"

#. type: Plain text
msgid "Default: `filesystem: \"ext4\"`"
msgstr "デフォルト: `filesystem: \"ext4\"`"

#. type: Title ====
#, no-wrap
msgid "fsOpts"
msgstr "fsOpts"

#. type: Plain text
msgid ""
"`fsOpts` is an optional parameter that passes options to the volume's "
"filesystem at creation time."
msgstr ""
"`fsOpts` はオプションで、作成時にボリュームのファイルシステムに渡すオプション"
"を指定します。"

#. type: Plain text
msgid ""
"Please note these values are specific to your chosen <<s-kubernetes-"
"filesystem, filesystem>>."
msgstr ""
"これらの値は選択した <<s-kubernetes-filesystem, filesystem>> 固有です。"

#. type: Plain text
msgid "Example: `fsOpts: \"-b 2048\"`"
msgstr "例: `fsOpts: \"-b 2048\"`"

#. type: Title ====
#, no-wrap
msgid "mountOpts"
msgstr "mountOpts"

#. type: Plain text
msgid ""
"`mountOpts` is an optional parameter that passes options to the volume's "
"filesystem at mount time."
msgstr ""
"`mountOpts` はオプションで、マウント時にボリュームのファイルシステムに渡すオ"
"プションを指定します。"

#. type: Plain text
msgid "Example: `mountOpts: \"sync,noatime\"`"
msgstr "例: `mountOpts: \"sync,noatime\"`"
